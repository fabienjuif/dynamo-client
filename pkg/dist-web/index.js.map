{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import AWS from 'aws-sdk';\nexport const createClient = (region = process.env.AWS_REGION, apiVersion = '2012-08-10') => {\n  AWS.config.update({\n    region\n  });\n  const docClient = new AWS.DynamoDB.DocumentClient({\n    apiVersion\n  });\n\n  const update = tableName =>\n  /**\n   * Update one document.\n   *\n   * @param {Object} data data you want to update (all fields will be updated!).\n   *                      You can set data value to `undefined` to remove it.\n   * @param {String} options.key the key to use as an ID, this key will not be updated. Default is `id`\n   */\n  async (data, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => {\n    const keys = Object.keys(data).filter(curr => curr !== key);\n    const updateKeys = [];\n    const updates = [];\n    const removes = [];\n    keys.forEach(k => {\n      if (data[k] === undefined || data[k] === null) {\n        removes.push(`#${k}`);\n      } else {\n        updateKeys.push(k);\n        updates.push(`#${k} = :${k}`);\n      }\n    });\n    let params = {\n      TableName: tableName,\n      Key: {\n        [key]: data[key]\n      },\n      ExpressionAttributeNames: keys.reduce((acc, k) => ({ ...acc,\n        [`#${k}`]: k\n      }), {})\n    }; // udpate values\n\n    if (updateKeys.length > 0) {\n      params = { ...params,\n        ExpressionAttributeValues: updateKeys.reduce((acc, k) => ({ ...acc,\n          [`:${k}`]: data[k]\n        }), {})\n      };\n    } // expression\n\n\n    let UpdateExpression = '';\n\n    if (updates.length > 0) {\n      UpdateExpression = `${UpdateExpression} set ${updates.join(', ')}`;\n    }\n\n    if (removes.length > 0) {\n      UpdateExpression = `${UpdateExpression} remove ${removes.join(', ')}`;\n    }\n\n    params = { ...params,\n      UpdateExpression\n    };\n    await docClient.update(params).promise();\n  };\n\n  const put = tableName =>\n  /**\n   * Insert or update a whole document.\n   *\n   * @param {object} data data to insert (or update)\n   */\n  data => docClient.put({\n    TableName: tableName,\n    Item: data\n  }).promise();\n\n  const deleteDocument = tableName =>\n  /**\n   * Remove a document given its key value.\n   *\n   * @param {String} keyValue key value to the document to remove\n   * @param {String} options.key key name. Default is `id`.\n   */\n  (keyValue, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => docClient.delete({\n    TableName: tableName,\n    Key: {\n      [key]: keyValue\n    }\n  }).promise();\n\n  const get = tableName =>\n  /**\n   * Read a document.\n   *\n   * @param {String} keyValue the key value that identify the document to retrieve.\n   * @param {Array<String>|String} projectionKeys the projection to apply\n   * @param {String} options.key key name. Default is `id`.\n   */\n  async (keyValue, projectionKeys = undefined, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => {\n    let params = {\n      TableName: tableName,\n      Key: {\n        [key]: keyValue\n      }\n    };\n\n    if (projectionKeys) {\n      const innerProjectionKeys = [].concat(projectionKeys);\n      params = { ...params,\n        ExpressionAttributeNames: innerProjectionKeys.reduce((acc, k) => ({ ...acc,\n          [`#${k}`]: k\n        }), {}),\n        ProjectionExpression: innerProjectionKeys.map(k => `#${k}`).join(',')\n      };\n    }\n\n    const {\n      Item\n    } = await docClient.get(params).promise();\n    return Item;\n  };\n\n  return {\n    collection: tableName => ({\n      delete: deleteDocument(tableName),\n      get: get(tableName),\n      put: put(tableName),\n      update: update(tableName)\n    })\n  };\n};"],"names":[],"mappings":"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"}