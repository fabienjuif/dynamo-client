{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["import AWS from 'aws-sdk';\nexport const createClient = (region = process.env.AWS_REGION, apiVersion = '2012-08-10') => {\n  AWS.config.update({\n    region\n  });\n  const docClient = new AWS.DynamoDB.DocumentClient({\n    apiVersion\n  });\n\n  const update = tableName =>\n  /**\n   * Update one document.\n   *\n   * @param {Object} data data you want to update (all fields will be updated!).\n   *                      You can set data value to `undefined` to remove it.\n   * @param {String} options.key the key to use as an ID, this key will not be updated. Default is `id`\n   */\n  async (data, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => {\n    const keys = Object.keys(data).filter(curr => curr !== key);\n    const updateKeys = [];\n    const updates = [];\n    const removes = [];\n    keys.forEach(k => {\n      if (data[k] === undefined || data[k] === null) {\n        removes.push(`#${k}`);\n      } else {\n        updateKeys.push(k);\n        updates.push(`#${k} = :${k}`);\n      }\n    });\n    let params = {\n      TableName: tableName,\n      Key: {\n        [key]: data[key]\n      },\n      ExpressionAttributeNames: keys.reduce((acc, k) => ({ ...acc,\n        [`#${k}`]: k\n      }), {})\n    }; // udpate values\n\n    if (updateKeys.length > 0) {\n      params = { ...params,\n        ExpressionAttributeValues: updateKeys.reduce((acc, k) => ({ ...acc,\n          [`:${k}`]: data[k]\n        }), {})\n      };\n    } // expression\n\n\n    let UpdateExpression = '';\n\n    if (updates.length > 0) {\n      UpdateExpression = `${UpdateExpression} set ${updates.join(', ')}`;\n    }\n\n    if (removes.length > 0) {\n      UpdateExpression = `${UpdateExpression} remove ${removes.join(', ')}`;\n    }\n\n    params = { ...params,\n      UpdateExpression\n    };\n    await docClient.update(params).promise();\n  };\n\n  const put = tableName =>\n  /**\n   * Insert or update a whole document.\n   *\n   * @param {object} data data to insert (or update)\n   */\n  data => docClient.put({\n    TableName: tableName,\n    Item: data\n  }).promise();\n\n  const deleteDocument = tableName =>\n  /**\n   * Remove a document given its key value.\n   *\n   * @param {String} keyValue key value to the document to remove\n   * @param {String} options.key key name. Default is `id`.\n   */\n  (keyValue, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => docClient.delete({\n    TableName: tableName,\n    Key: {\n      [key]: keyValue\n    }\n  }).promise();\n\n  const get = tableName =>\n  /**\n   * Read a document.\n   *\n   * @param {String} keyValue the key value that identify the document to retrieve.\n   * @param {Array<String>|String} projectionKeys the projection to apply\n   * @param {String} options.key key name. Default is `id`.\n   */\n  async (keyValue, projectionKeys = undefined, {\n    key = 'id'\n  } = {\n    key: 'id'\n  }) => {\n    let params = {\n      TableName: tableName,\n      Key: {\n        [key]: keyValue\n      }\n    };\n\n    if (projectionKeys) {\n      const innerProjectionKeys = [].concat(projectionKeys);\n      params = { ...params,\n        ExpressionAttributeNames: innerProjectionKeys.reduce((acc, k) => ({ ...acc,\n          [`#${k}`]: k\n        }), {}),\n        ProjectionExpression: innerProjectionKeys.map(k => `#${k}`).join(',')\n      };\n    }\n\n    const {\n      Item\n    } = await docClient.get(params).promise();\n    return Item;\n  };\n\n  return {\n    collection: tableName => ({\n      delete: deleteDocument(tableName),\n      get: get(tableName),\n      put: put(tableName),\n      update: update(tableName)\n    })\n  };\n};"],"names":["createClient","region","process","env","AWS_REGION","apiVersion","AWS","config","update","docClient","DynamoDB","DocumentClient","tableName","data","key","keys","Object","filter","curr","updateKeys","updates","removes","forEach","k","undefined","push","params","TableName","Key","ExpressionAttributeNames","reduce","acc","length","ExpressionAttributeValues","UpdateExpression","join","promise","put","Item","deleteDocument","keyValue","delete","get","projectionKeys","innerProjectionKeys","concat","ProjectionExpression","map","collection"],"mappings":"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"}